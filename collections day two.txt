---------------------------JAVA COLLECTIONS PROBLEM STATEMENTS--------------------------------
1. Given two integer arrays, merge the common elements into a new array.
 find the sum of the elements
input1:{1,2,3,4}
input2:{3,4,5,6}
logic:{3,4}
output:7



import java.util.*;
class CollectionExample1
{
	
	
	public static void main(String args[])
	{
		int sum=0;
		ArrayList<Integer> a1= new ArrayList<Integer> ();
		ArrayList<Integer>  a2= new ArrayList<Integer> ();
		a1.add(1);
		a1.add(2);
		a1.add(3);
		a1.add(4);
		a2.add(3);
		a2.add(4);
		a2.add(5);
		a2.add(6);
		a1.retainAll(a2);
		System.out.println(a1);
		for(int i=0;i<a1.size();i++)
		{
		int a=(a1.get(i)).intValue();
		sum = sum + a;
	
		}
		System.out.println(sum);
	}
}
------------------------------------------------
2. Retrieve the odd numbers till given input number. add and subtract it 
consecutively and return the result.
Input:9
Output:1+3-5+7-9=-3



import java.util.*;
public class CollectionExample2
 {
public static int diff(int n)
{
ArrayList<Integer> l1=new ArrayList<Integer>();
for(int i=1;i<=n;i++)
if(i%2!=0)
l1.add(i);
int n1=l1.get(0);
for(int i=1;i<l1.size();i++)
if(i%2!=0)
n1=n1+l1.get(i);
else
n1=n1-l1.get(i);
return n1;
}
public static void main(String[] args)
 {
Scanner s=new Scanner(System.in);
int n=s.nextInt();
System.out.println(diff(n));
}
}


-------------------------------------------------
3. arraylist of string type which has name#mark1#mark2#mark3 format. retrieve the name of the student who has scored max marks(total of three)
input:{"arun#12#12#12","deepak#13#12#12"}
output:deepak
Hint:Map<String, Integer> =new HashMap<String, Integer>()



import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.StringTokenizer;
 class CollectionExample3{
      public static String max(String[] s1){
            Map m1 = new HashMap();
            for(int i = 0;i < s1.length();i++){
                  String s2 = s1[i];
                  StringTokenizer t = new StringTokenizer(s2,"#");
                  String s3 = t.nextToken();
                  int n1 = Integer.parseInt(t.nextToken());
                  int n2 = Integer.parseInt(t.nextToken());
                  int n3 = Integer.parseInt(t.nextToken());
                  int n = n1+n2+n3;
                  m1.put(s3, n);
            }
            System.out.println(m1);
            int max = 0;
            String m = new String();
            Iterator i = m1.keySet().iterator();
            while(i.hasNext()){
            	String  s4 = (String) (i.next());
                  int j = (int) m1.get(s4);
                  if(j > max){
                        max = j;
                        m = s4;
                  }
            }
            return m;
      }
      public static void main(String[] args) {
            String[] s1 = {"arun#12#12#12","deepak#13#12#12","puppy#12#11#12"};
            System.out.println(max(s1));
      }
}
---------------------------------------------------------

4. Retrieve the palindorme-true number set from given number limit and
 return the sum
input1:90 input2:120
logic:99+101+111
output:311
Hint:List<Integer> l1=new ArrayList<Integer>();



import java.util.*;
class CollectionExample4
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		ArrayList<Integer> l1=new ArrayList<Integer>();
		int r1=sc.nextInt();
		int r2=sc.nextInt();
		for(int i=r1;i<=r2;i++)
		{
			int pal=i,rem=0;
			while(pal>0)
			{
				rem=(rem*10)+(pal%10);
				pal=pal/10;
			}
			if(rem==i)
			l1.add(i);
		}
		int sum=0;
		for(int i=0;i<l1.size();i++)
		{
			sum=sum+l1.get(i);
		}
		System.out.println(sum);
		
	}
}
----------------------------------------------------
5.HashMap with regnum as key and mark as value. find the avg of marks
 whose key is odd.
input:{12:90,35:90,33:90,56:88}
output:avg of(90+90) =90



import java.util.*;
public class CollectionExample5 {
      public static int sumOfPalindromeNos(int n1,int n2){
            List l1 = new ArrayList();
            for(int i = n1;i <= n2;i++){
                  int r = 0,n3 = i;
                  while(n3 != 0){
                        r = (r*10)+(n3%10);
                        n3 = n3/10;
                  }
                  if(r == i)
                        l1.add(i);
            }
            System.out.println(l1);
            int s = 0;
            for(int i = 0;i < l1.size();i++)
                  s =s+l1.get(i);
            return s;
      }
      public static void main(String[] args) {
            Scanner s = new Scanner(System.in);
            System.out.println("enter the range:");
            int n1 = s.nextInt();
            int n2 = s.nextInt();
            System.out.println("sum of palindrome nos.within given range is:"+sumOfPalindromeNos(n1,n2));
      }
}import java.util.*;
public class Coll5 {
      public static int averageOfMarks(Map m1){
            int n = 0,c = 0;
            Iterator i = m1.keySet().iterator();
            while(i.hasNext()){
                  Integer b = (Integer) i.next();
                  if(b%2 != 0){
                        c++;
                        n+=m1.get(b);
                  }
            }
            return (n/c);
      }
      public static void main(String[] args) {
            Map m1 = new HashMap();
            m1.put(12, 90);
            m1.put(35, 90);
            m1.put(33, 90);
            m1.put(56, 88);
            m1.put(36, 67);
            System.out.println(averageOfMarks(m1));
      }
}

-----------------------------------------------------
6. Retrieve the max from array which is in a odd-index



import java.util.*;
public class CollectionExample6 {
      public static void main(String[] args) {
    	  Scanner sc=new Scanner(System.in);
    	  int n=sc.nextInt();
    		  int[] n1=new int[n];
    		  for(int i=0;i<n;i++)
        	  {
    			  n1[i]=sc.nextInt();
    		  
    	  }
          
            System.out.println(odd(n1));
      }
      public static int odd(int[] a) {
            List l = new ArrayList();
            for(int i = 0;i < a.length;i++)
                  if(i%2 != 0)
                        l.add(a[i]);
            int b=0;
            for(int i = 0;i < l.size();i++){
                  int c = (Integer) l.get(i);
                  if(c > b)
                        b = c;
            }
            return b;
      }
}

--------------------------------------------------------
7. Create a program to get the hashmap from the given input string array where the key for the hashmap
   is first three letters of array element in uppercase and the value of hashmap is the element itself
   Input:{“goa”,”kerala”,”gujarat”}                 [string array]
   Output:{{GOA,goa},{KER,kerala},{GUJ,Gujarat}}    [hashmap]



import java.util.*;
public class CollectionExample7 {
      public static void main(String[] args) {
            String[] s1 = {"goa","kerala","gujarat"};
            putvalues(s1);
      }
      public static void putvalues(String[] s1) {
            ArrayList < String > l1 = new ArrayList < String > ();
            HashMap < String,String > m1 = new HashMap < String,String > ();
            ArrayList < String > l2 = new ArrayList < String > ();
            for(String s:s1)
                  l1.add(s.toUpperCase().substring(0, 3));
            for(String s:s1)
                  l2.add(s);
            for(int i = 0;i < l1.size();i++)
                  m1.put(l1.get(i),l2.get(i));
            System.out.println(m1);
      }
}
-------------------------------------------------------------------
8. String[] input1=["Vikas","Lokesh",Ashok]
   expected output String: "Vikas,Lokesh,Ashok"



import java.util.*;
import java.util.Map.Entry;
public class CollectionExample8 {
      public static void main(String[] args) {
            HashMap < String,String > m1 = new HashMap < String,String > ();
            m1.put("ram","hari");
            m1.put("cisco","barfi");
            m1.put("honeywell","cs");
            m1.put("cts","hari");
            String s2 = "hari";
            getvalues(m1,s2);
      }
      public static void getvalues(HashMap < String, String > m1, String s2) {
            ArrayList < String > l1 = new ArrayList < String > ();
            for(Entry < String, String > m:m1.entrySet()){
                  m.getKey();
                  m.getValue();
                  if(m.getValue().equals(s2))
                        l1.add(m.getKey());
            }
            String[] op = new String[l1.size()];
            for(int i = 0;i < l1.size();i++){
                  op[i] = l1.get(i);
                  System.out.print(op[i]+" ");
            }
      }
}
-------------------------------------------------------------------
9. I/P hashmap<String String>{"ram:hari","cisco:barfi","honeywell:cs","cts:hari"};
   i/p 2="hari";
   o/p string[]={"ram","cts"};



import java.util.*;
import java.util.Map.Entry;
public class CollectionExample9 {
      public static void main(String[] args) {
            HashMap < String,String > m1 = new HashMap < String,String > ();
            m1.put("ram","hari");
            m1.put("cisco","barfi");
            m1.put("honeywell","cs");
            m1.put("cts","hari");
            String s2 = "hari";
            getvalues(m1,s2);
      }
      public static void getvalues(HashMap < String, String > m1, String s2) {
            ArrayList < String > l1 = new ArrayList < String > ();
            for(Entry < String, String > m:m1.entrySet()){
                  m.getKey();
                  m.getValue();
                  if(m.getValue().equals(s2))
                        l1.add(m.getKey());
            }
            String[] op = new String[l1.size()];
            for(int i = 0;i < l1.size();i++){
                  op[i] = l1.get(i);
                  System.out.print(op[i]+" ");
            }
      }
}

---------------------------------------------------------------------
10.
HashMap<String,Integer> h1={“abc”:50,”efg”:70};
    if the mark is less than 60 then put the output in the
    HashMap<String,String> h2={“abc”:”fail”,”efg”:”pass”}



import java.util.*;
public class CollectionExample10 {
public static void main(String[] args) {
 Map<String, Integer> m1=new HashMap<String, Integer>();  
 m1.put("abc", 90);
 m1.put("efg", 50);
 m1.put("mno", 60);
 m1.put("rst", 75);
 m1.put("xyz", 35);
 System.out.println(examResult(m1));
}
public static Map<String,String> examResult(Map<String, Integer> m1) {
 Map<String,String> m2=new HashMap<String, String>();
 String s1=new String();
 String s2=new String();
 int n=0;
 Iterator<String> i=m1.keySet().iterator();
 while(i.hasNext()){
  s1=(String) i.next();
  n=m1.get(s1);
  if(n>=60)
   s2="PASS";
  else
   s2="FAIL";
  m2.put(s1, s2); }
 return m2;
}
}


---------------------------------------------------------------------
11.
In a hashmap if key is odd then find average of value as integer
    ex: h1={1:4,2:6,4:7,5:9}
        output=(4+9)/2


import java.util.*;
public class CollectionExample11 {
public static void main(String[] args) {
 Map<Integer, Integer> m1=new HashMap<Integer, Integer>();
 m1.put(1, 4);
 m1.put(2, 6);
 m1.put(4, 7);
 m1.put(5, 9);
 System.out.println(avgValuesOfOddKeys(m1));
}
public static int avgValuesOfOddKeys(Map<Integer, Integer> m1) {
 int l=0,m=0;
 Iterator<Integer> i=m1.keySet().iterator();
 while(i.hasNext()){
  int n=(Integer) i.next();
  if(n%2!=0){
   m+=m1.get(n);
   l++;} }
 return m/l;
}
}
----------------------------------------------------------------------
12. HashMap<String,String> input1={“mouse”:”100.2”,”speaker”:”500.6”,”Monitor”:”2000.23”};
    String[] input2={“speaker”,”mouse”};
    Float output=600.80(500.6+100.2);



import java.util.*;
public class CollectionExample12 {
public static void main(String[] args) {
 HashMap<String, String> m1=new HashMap<String, String>();
 m1.put("mouse", "100.2");
 m1.put("speaker","500.6");
 m1.put("monitor", "2000.23");
 String[] s={"speaker","mouse"};
 System.out.println(getTheTotalCostOfPheripherals(m1,s));
}
public static float getTheTotalCostOfPheripherals(HashMap<String,String> m1,
  String[] s) {
 Float f=(float) 0;
 Iterator<String> i=m1.keySet().iterator();
 while(i.hasNext()){
 String s1=(String) i.next();
 Float f1=Float.parseFloat(m1.get(s1));
 for(int j=0;j<s.length;j++)
  if(s[j].equals(s1))
   f+=f1; }
 return f;
}
}

-----------------------------------------------------------------------